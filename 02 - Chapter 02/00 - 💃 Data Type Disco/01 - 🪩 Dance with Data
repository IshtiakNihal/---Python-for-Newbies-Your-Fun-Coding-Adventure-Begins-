# 🪩 Dance with Data: Variables & Data Types Unleashed!

Welcome to the **Data Type Disco**, where variables and data types are the stars of the show! 🎤 In this guide, you’ll learn how to use **variables** to store data and groove with Python’s core data types: **integers**, **floats**, **strings**, and **Booleans**. Think of variables as your dance partners, holding onto numbers, text, or true/false vibes while you spin them around with code. Let’s hit the floor with some funky examples! 💃

## 📖 What Are Variables?

Variables are like labeled treasure chests 📦 in your code, storing data you can use and change. Each variable has a **name** (like `score` or `nickname`) and a **value** (like `100` or `"DiscoStar"`). You create a variable using the `(=)` sign, which means “assign this value to that name.”

### Rules for Variable Names

- Use letters, numbers, or underscores (`_`), like `dance_moves` or `score_2025`.
- No spaces or special characters (e.g., `dance#move` is a no-go).
- Can’t start with a number (e.g., `1dance` is invalid, but `dance1` is cool).
- Case-sensitive (`Score` and `score` are different).

### Example 1: Creating Variables

```python
# Setting up my disco profile
nickname = "GroovyGuru"  # String
age = 15                 # Integer
dance_skill = 9.5        # Float
is_dancing = True        # Boolean

print(nickname)  # Output: GroovyGuru
print(age)       # Output: 15
```

Here, we assign different data types to variables and print them. The `=` sign is like saying, “Yo, store this value in that chest!”

### Example 2: Changing Variables

Variables aren’t stuck forever—you can swap their values like changing dance moves!

```python
# Leveling up my dance score
score = 50
score = 75  # Reassigning a new value

print(score)  # Output: 75
```

We start with `score = 50`, then update it to `75`. The latest value wins, and `print(score)` shows `75`.

## 🎵 The Fab Four Data Types

Python’s core data types are like the instruments in your disco band—each plays a unique role. Let’s meet the crew!

### 1. Integer (int) – Whole Number Wonders

Integers are whole numbers (no decimals), like `0`, `42`, or `-10`. Use them for counting things, like disco balls or party guests.

```python
# Counting party stuff
disco_balls = 12
guests = 25

print(disco_balls)  # Output: 12
print(guests)       # Output: 25
```

**Fun Fact**: Integers are super efficient in Python because they don’t need decimal math. They’re perfect for loops or counting in games!

### 2. Float – Decimal Dazzlers

Floats are numbers with decimals, like `3.14` or `99.99`. They’re great for precise measurements or fractions, like dance floor sizes or song tempos.

```python
# Measuring the dance floor
floor_length = 10.5  # Meters
song_tempo = 120.75  # Beats per minute

print(floor_length)  # Output: 10.5
print(song_tempo)    # Output: 120.75
```

**Knowledge Nugget**: Floats are used in science and finance, like calculating rocket trajectories or stock prices, because they handle precision. But watch out—too many decimals can lead to tiny rounding errors!

### 3. String (str) – Textual Twirlers

Strings are text, wrapped in single (`'`) or double (`"`) quotes. They store names, messages, or even emojis—anything you want to say or show.

```python
# Party vibes
song_title = "Disco Fever"
dj_name = '@FunkyFox'

print(song_title)  # Output: Disco Fever
print(dj_name)     # Output: @FunkyFox
```

**Cool Tip**: Strings are everywhere—think website usernames, game dialogue, or app labels. You used strings in Chapter 1’s Blast a Time Capsule to Future You when printing your letter!

### 4. Boolean (bool) – True/False Groovers

Booleans are simple but powerful, holding only `True` or `False` (capitalized in Python). They’re like on/off switches for decisions, named after mathematician George Boole.

```python
# Party status
is_party_on = True
is_tired = False

print(is_party_on)  # Output: True
print(is_tired)     # Output: False
```

**Neat Fact**: Booleans are the backbone of logic in coding, used for choices like “Is the player alive?” in games or “Is the user logged in?” on websites.

## 💡 Tips for Dancing with Data

- **Name Smart**: Use clear variable names like `dance_score` instead of `x`—it’s like labeling your treasure chests so you don’t forget what’s inside.
    
- **Mix and Match**: Combine data types in one program, like using a string for a name and a float for a score.
    
- **Check Types**: Curious about a variable’s type? Use `type()`:
    
    ```python
    print(type(42))        # Output: <class 'int'>
    print(type("Hello"))   # Output: <class 'str'>
    ```
    
- **Have Fun**: Add silly variable names or emojis to make coding a party!
    

## 🎯 What’s Next?

You’re ready to strut your stuff! Head to the Exercises folder to create your own `datatypes.py` program, building a disco profile card with variables and data types. Let’s keep the party rocking! 🕺

**Quick Challenge**: What’s the output of this code?

```python
mood = "Happy"
print(mood)
mood = "Super Happy"
print(mood)
```

Try it in the exercises!

## ❓ Need Help?

If variables or data types throw you off beat, don’t sweat it! **Leave a comment** on this GitHub page or **join our Discord community** (link in the repo description) to ask questions and get help from other noowbies.

**Back to Topic Guide**: Data Type Disco | **Main Guide**: Python for Noowbies